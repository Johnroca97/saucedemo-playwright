name: Playwright Tests

# Permisos necesarios para el workflow
permissions:
  contents: read
  pages: write
  id-token: write

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Permite ejecutar manualmente

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npx playwright test
      env:
        CI: true
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: test-results
        path: test-results/
        retention-days: 30

  # Publicar reportes a GitHub Pages (solo en main/master)
  publish-report:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    # Permisos espec√≠ficos para GitHub Pages
    permissions:
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download report
      uses: actions/download-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: playwright-report/

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  # Comentario en PRs con resultados
  comment-pr:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Comment PR
      uses: actions/github-script@v7
      with:
        script: |
          const testResult = '${{ needs.test.result }}';
          const emoji = testResult === 'success' ? '‚úÖ' : '‚ùå';
          const status = testResult === 'success' ? 'All tests passed' : 'Some tests failed';
          
          const body = `## üé≠ Playwright Test Results
          
          ${emoji} **${status}**
          
          üìä [View detailed report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });